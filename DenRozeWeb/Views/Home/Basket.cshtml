@using DenRozeWeb.Models;
@model BasketModel;
@{
    int index = 0;
    ViewData["Title"] = "Basket";
}
<div class="text-center">
    <h2>Create Order</h2>
</div>
@using (Html.BeginForm())
{
    <h4>Order Items</h4>
    <p>Item count: @ViewBag.Basket.Count</p>
    @foreach (ItemModel i in ViewBag.Basket)
    {
        <div>
            @Html.HiddenFor(x => x.BillItems[index].IID)
        </div>
        <div class="form-group row">
            @Html.LabelFor(x => x.BillItems[index].Count, $"{@i.Name} ({@i.Price} KC)", new { @class = "col-sm-2 col-form-label" })
            <div class="col-sm-10">
                @Html.TextBoxFor(x => x.BillItems[index].Count, new { @class = "form-control", @placeholder = "Enter count" })
            </div>
            @Html.ValidationMessageFor(x => x.BillItems[index].Count)
        </div>
        index++;
    }
    <h4>User Information (read only, change in User settings)</h4>
    @Html.HiddenFor(x => x.User.Login)
    @Html.HiddenFor(x => x.User.Password)
    <div class="form-group row">
        @Html.LabelFor(x => x.User.Full_name, new { @class = "col-sm-2 col-form-label" })
        <div class="col-sm-10">
            @Html.TextBoxFor(x => x.User.Full_name, new { @class = "form-control-plaintext", @placeholder = "Full Name", @readonly = "true" })
        </div>
        @Html.ValidationMessageFor(x => x.User.Full_name)
    </div>
    <div class="form-group row">
        @Html.LabelFor(x => x.User.Email, new { @class = "col-sm-2 col-form-label" })
        <div class="col-sm-10">
            @Html.TextBoxFor(x => x.User.Email, new { @class = "form-control-plaintext", @placeholder = "Email", @readonly = "true" })
        </div>
        @Html.ValidationMessageFor(x => x.User.Email)
    </div>
    <div class="form-group row">
        @Html.LabelFor(x => x.User.Phone, new { @class = "col-sm-2 col-form-label" })
        <div class="col-sm-10">
            @Html.TextBoxFor(x => x.User.Phone, new { @class = "form-control-plaintext", @placeholder = "Phone", @readonly = "true" })
        </div>
        @Html.ValidationMessageFor(x => x.User.Phone)
    </div>
    <div class="form-group row">
        @Html.LabelFor(x => x.User.Address, new { @class = "col-sm-2 col-form-label" })
        <div class="col-sm-10">
            @Html.TextBoxFor(x => x.User.Address, new { @class = "form-control-plaintext", @placeholder = "Address", @readonly = "true" })
        </div>
        @Html.ValidationMessageFor(x => x.User.Address)
    </div>
    <h4>Order note</h4>
    <div class="form-group row">
        @Html.LabelFor(x => x.Order.Note, new { @class = "col-sm-2 col-form-label" })
        <div class="col-sm-10">
            @Html.TextAreaFor(x => x.Order.Note, new { @class = "form-control", @placeholder = "Note" })
        </div>
        @Html.ValidationMessageFor(x => x.Order.Note)
    </div>

    <button class="btn btn-primary" type="submit">Send Order</button>
}
